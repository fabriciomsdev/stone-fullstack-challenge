name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "stone-test-deploy"
  EB_APPLICATION_NAME       : "StoneCasePRD"
  EB_ENVIRONMENT_NAME       : "Stonecaseprd-env"
  DEPLOY_PACKAGE_NAME       : "falcon-app-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-east-1"
  ENV_FILE_LOCATION         : "./backend/rest-api/service"
on: 
  push:
    branches: 
      - production

jobs:
    ci_pipeline:
       runs-on: ubuntu-latest
       
       steps:
         - name: Git clone our repository
           uses: actions/checkout@v1

         - name: Replace Env varibles For DB CONNECTION
           uses: bejoistic/str-replace@master
           with:
             find: "DB_CONNECTION_VALUE"
             replace: "${{ secrets.DB_CONNECTION_PRD }}"
             include: ".env.prod"

         - name: Prepare Enviroment of REST API
           run : |
            cp -f ${{ env.ENV_FILE_LOCATION }}/.env.prod ${{ env.ENV_FILE_LOCATION }}/.env \
            && rm ${{ env.ENV_FILE_LOCATION }}/.env.prod

         - name: Prepare Docker Compose File To PROD
           run : |
            cp -f ./docker-compose.prod.yml ./docker-compose.yml \
            && rm ./docker-compose.prod.yml

         - name: Create ZIP deployment package
           run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*
           
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

         - name: Copy our Deployment package to S3 bucket
           run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
         
         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"
           
    cd_pipeline:
       runs-on: ubuntu-latest
       needs: [ci_pipeline]
       
       steps:
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
         
         - name: Create new ElasticBeanstalk Applicaiton Version
           run : |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }} \
            --debug"
         - name: Deploy our new Application Version
           run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
           
         - name: Print nice message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully"  
